# =============================================================================
# Use travis settings maximum_number_of_builds --set 1 as the builds envs depend on flickr
# =============================================================================
# language
language: python
python:
  - "2.7"
#  - "3.6"
# nightly gets the latest nightly version of python... python 3 in the case. For now I don't want that!
#  - "nightly"

before_install:
  - echo -e "machine github.com\n  login $CI_USER\n  password $CI_USER_PASSWORD" >> ~/.netrc
  
# =============================================================================
# command to install dependencies
install:
  - pip install -r requirements.txt
  - wget https://github.com/oPromessa/flickr-deletr/archive/master.tar.gz -O flickr-deletr-master.tar.gz
  - tar zxvf flickr-deletr-master.tar.gz
  - ls -la

# =============================================================================
# env
env:
  global:
    - PYTHONPATH=..:.
    - LC_ALL=en_US.utf8
    - LANG=en_US.utf8
# Set to -v for Verbose option of uploadr
    - VerboseVar=-v
    - BadFilesVar=-b  
  matrix:
# TestScenario: Help, DryRun, BadFiles, MultiProcessing, Remove, Replace, RemoveReplace
# Help
    - TestScenario=Help UploadrOptions="$VerboseVar --help"
# DryRun
    #- TestScenario=DryRun UploadrOptions="$VerboseVar -n"  
# Badfiles  
    #- TestScenario=BadFiles UploadrOptions="$VerboseVar $BadFilesVar"
# Multiprocessing  
    - TestScenario=MultiProcessing UploadrOptions="$VerboseVar $BadFilesVar -p 5"
# Remove
    #- TestScenario=Remove UploadrOptions="$VerboseVar $BadFilesVar"
# Replace
    #- TestScenario=Replace UploadrOptions="$VerboseVar $BadFilesVar"
# RemoveReplace
    - TestScenario=RemoveReplace UploadrOptions="$VerboseVar $BadFilesVar"

# =============================================================================
# before_script
# Get database token ready
# Get uploadr.ini from tests
# Use environment secure variable for private settings
before_script:
  - pwd
#  - ls -laR
  - cp tests/uploadr.ini .
  - cp tests/uploadr.ini /home/travis/virtualenv/python2.7.13/bin/uploadr.ini
  - grep FILES_DIR uploadr.ini
#  - cat uploadr.ini
  - echo "INSERT INTO oauth_tokens ( api_key, lookup_key, oauth_token, oauth_token_secret, access_level, fullname, username, user_nsid) VALUES ( '"$api_key"', '', '"$oauth_token"', '"$oauth_token_secret"', 'delete', '"$fullname"', '"$username"', '"$user_nsid"');" | sqlite3 token/oauth-tokens.sqlite
  - sqlite3 token/oauth-tokens.sqlite 'SELECT * FROM oauth_tokens;'
  - md5sum "./tests/Test Photo Library/Pics"/*


  
# =============================================================================
# run script for tests  
script:
# DELETE RUN ------------------------------------------------------------------
# !!!!!!!!!!!!!!!!!!!!!!!!!! CAREFULL !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
  - cp flickr-deletr-master/tests/uploadr.ini flickr-deletr-master/uploadr.ini
  - coverage run -a --concurrency multiprocessing ./flickr-deletr-master/delete.py
  
# First RUN -------------------------------------------------------------------
#  - coverage run -a --concurrency multiprocessing uploadr.py $VerboseVar -p 2
  - coverage run -a --concurrency multiprocessing uploadr.py $VerboseVar $UploadrOptions
  
  - coverage combine
  - coverage report -m uploadr.py
  - sleep 5

# Second RUN ------------------------------------------------------------------
  - if [[ $TestScenario == Remove ]]; then rm "./tests/Test Photo Library/photo.jpg"; fi
  - if [[ $TestScenario == Replace ]]; then cp "./tests/Test Photo Library/ReplaceTest/file00053809264.jpg.ForReplace" "./tests/Test Photo Library/Pics/file00053809264.jpg"; fi
  - if [[ $TestScenario == RemoveReplace ]]; then rm "./tests/Test Photo Library/photo.jpg"; fi
  - if [[ $TestScenario == RemoveReplace ]]; then cp "./tests/Test Photo Library/ReplaceTest/file00053809264.jpg.ForReplace" "./tests/Test Photo Library/Pics/file00053809264.jpg"; fi
  - coverage run -a --concurrency multiprocessing uploadr.py $VerboseVar $UploadrOptions

  - coverage combine
  - coverage report -m uploadr.py

# pytest --flakes (Code analysis) ---------------------------------------------
  - pytest -v --flakes
#  - pytest -v # or py.test for Python versions 3.5 and below
  - pytest --doctest-modules # Attempt to run test_*.txt with doctest

# Deleted Pics Non existant on FLickr -----------------------------------------
# For testing a local deleted file also not available in flickr
# - sleep 10
# Test Deleted file
#  - coverage run -a uploadr.py $VerboseVar -bl 10  
#  - coverage report -m uploadr.py
#  - sqlite3 flickrdb "SELECT *, datetime( last_modified, 'unixepoch', 'localtime') FROM files;"

after_script:
# MD5SUM Output for REFERENCE -------------------------------------------------
  - if [[ $TestScenario == RemoveReplace ]]; then md5sum "./tests/Test Photo Library/Pics"/*; fi
  - if [[ $TestScenario == RemoveReplace ]]; then md5sum "./tests/Test Photo Library/Pics"/*; fi
  
# DB OUTPUT for REFERENCE -----------------------------------------------------
  - sqlite3 flickrdb "SELECT *, datetime( last_modified, 'unixepoch', 'localtime') FROM files;"
  - sqlite3 flickrdb 'SELECT * FROM badfiles;'
  - sqlite3 flickrdb 'SELECT * FROM sets;'  